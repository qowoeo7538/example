<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>example-framework-web</artifactId>
        <groupId>org.lucas</groupId>
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>example-framework-web-springflux</artifactId>
    <packaging>jar</packaging>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-netty</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- spring 通过 HttpHandler 将不同HTTP服务器API是成为的最小抽象，
        而且 WebFlux 底层基础设施是基于其进行编程的，所以不同类型的服务器只需
        要添加一个适配器来适配HttpHandler即可，主要服务器与其对应的适配器,当
        使用 undertow 时，直接使用 undertow API，而不使用 Servlet API.-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-undertow</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.eclipse.collections</groupId>
            <artifactId>eclipse-collections</artifactId>
        </dependency>

        <dependency>
            <groupId>org.lucas</groupId>
            <artifactId>component-common</artifactId>
        </dependency>

        <dependency>
            <groupId>org.lucas</groupId>
            <artifactId>component-thread</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>